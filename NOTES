apt-cache search libavcodec
sudo apt-get install libjpeg-dev jstest-gtk



https://varhowto.com/install-ros-noetic-raspberry-pi-4/

sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu buster main" > /etc/apt/sources.list.d/ros-noetic.list'
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
sudo apt update
sudo apt-get install -y python-rosdep python-rosinstall-generator python-wstool python-rosinstall build-essential cmake
sudo rosdep init
rosdep update
mkdir ~/ros_catkin_ws
cd ~/ros_catkin_ws
rosinstall_generator ros_comm --rosdistro noetic --deps --wet-only --tar > noetic-ros_comm-wet.rosinstall
wstool init src noetic-ros_comm-wet.rosinstall
rosdep install -y --from-paths src --ignore-src --rosdistro noetic -r --os=debian:buster

sudo src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/noetic -j1 -DPYTHON_EXECUTABLE=/usr/bin/python3
echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc  
bash source
bash

@@@@@@CONF_SWAPSIZE=1024@@@@@@
sudoedit /etc/dphys-swapfile
sudo dphys-swapfile setup
sudo dphys-swapfile swapon
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


mkdir ~/catkin_ws/src
cd catkin_ws
catkin_make
rosinstall_generator nodelet_core bond_core common_msgs serial dynamic_reconfigure rplidar_ros diagnostics roslint  joystick_drivers urdf rosconsole_bridge xacro usb_cam image_common rosserial --rosdistro noetic --deps --wet-only --tar > noetic-phantom-dependencies.rosinstall
wstool init src noetic-phantom-dependencies.rosinstall
rosdep install -y --from-paths src --ignore-src --rosdistro noetic -r --os=debian:buster
catkin_make -DCMAKE_BUILD_TYPE=Release -j4

src/catkin/bin/catkin_make -DCMAKE_BUILD_TYPE=Release -j4 -DPYTHON_EXECUTABLE=/usr/bin/python3
src/catkin/bin/catkin_make  -DCMAKE_INSTALL_PREFIX=/opt/ros/noetic -DCATKIN_WHITELIST_PACKAGES=camera_calibration_parsers -DPYTHON_EXECUTABLE=/usr/bin/python3
 
 
git https://github.com/Interbotix/HROS1-Framework.git
cd /home/pi/HROS1-Framework/Linux/build
@@@@@@@@@@@@@@@@  const constexpr @@@@@@@@@@@@@@@@

vi ../../Framework/include/AXDXL.h
vi ../../Framework/include/Kinematics.h
vi ../../Framework/include/Camera.h

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
sudo make all
 

 
 
 /etc/udev/rules.d/73-joy-aliases.rules
 
 KERNEL=="ttyUSB*", ATTRS{idVendor}=="10c4", ATTRS{idProduct}=="ea60", MODE:="0666", SYMLINK+="rplidar"
 SUBSYSTEMS=="input", KERNEL=="js[0-9]*", ATTRS{name}=="Sony PLAYSTATION(R)3 Controller",  MODE:="0666", SYMLINK+="input/ps3"
 sudo service udev restart
 sudo chmod a+rw /dev/input/ps3
 


 Plug the USB bluetooth dongle into your computer. Then, plug the PS3 bluetooth joystick into the computer using a USB cable.
 Load the bluetooth dongle's MAC address into the PS3 joystick using:
 $ sudo bash
 $ rosrun ps3joy sixpair
 
 #OJO[python2.7]
 sudo python -m pip install pybluez==0.22
 
 $ sudo bash
 $ rosrun ps3joy ps3joy.py
 $ exit

 
 

######### http://wiki.ros.org/realsense_camera #########

roslaunch realsense_camera f200_nodelet_default.launch
<param name="$(arg camera)/driver/enable_ir"         type="bool"  value="true" />

rosinstall_generator cv_bridge pcl_ros > realsense.dependencies
rosinstall_generator pcl_conversions pcl_msgs tf tf2 tf2_eigen tf2_ros > pcl_ros.dependencies
rosinstall_generator angles > tf.dependencies
rosinstall_generator actionlib > tf2_ros.dependencies
rosinstall_generator tf2_msgs tf2_py > tf2.dependencies

wstool merge -t src <file.dependencies>
wstool update -t src
rosdep install -y --from-paths src --ignore-src --rosdistro melodic -r --os=debian:buster

catkin_make -j4 -DCMAKE_BUILD_TYPE=Release -DCATKIN_WHITELIST_PACKAGES="cv_bridge;tf2_eigen;tf2_py;tf2_msgs;tf2;actionlib;tf2_ros;angles;tf;pcl_msgs ;pcl_conversions;pcl_ros" --force-cmake
sudo apt-get install libusb-1.0-0-dev pkg-config
sudo apt-get install libglfw3-dev
http://wiki.ros.org/realsense_camera/Tutorials/Building_librealsense_from_Sources
git clone https://github.com/IntelRealSense/librealsense.git
cd ~/catkin_ws/src
git checkout tags/v1.12.4 -b librealsense
cd ~/catkin_ws/
catkin_make --pkg librealsense
catkin_make -j4 -DCMAKE_BUILD_TYPE=Release -DCATKIN_WHITELIST_PACKAGES=realsense_camera --force-cmake
##ALTERNATIVE
https://github.com/IntelRealSense/librealsense/blob/legacy/doc/installation.md
cd librealsense && mkdir build && cd build
cmake ../
cmake ../ -DBUILD_EXAMPLES=true -DBUILD_GRAPHICAL_EXAMPLES=false
make && sudo make install
sudo ldconfig

##dmesg
[    5.180506] uvcvideo: Unknown video format 52564e49-2d90-4a58-920b-773f1f2c556b
[    5.180529] uvcvideo: Unknown video format 49524e49-2d90-4a58-920b-773f1f2c556b
[    5.180550] uvcvideo: Unknown video format 494c4552-1314-f943-a75a-ee6bbf012e23
https://eleccelerator.com/wiki/index.php?title=Raspbian_Buster_ROS_RealSense#Installing_librealsense
https://github.com/IntelRealSense/librealsense/blob/master/scripts/realsense-camera-formats.patch

sudo apt-get update && sudo apt-get upgrade
sudo apt-get install bison flex bc
sudo apt-get install raspberrypi-kernel-headers
git clone https://github.com/raspberrypi/linux.git
cd linux
FIRMWARE_HASH=$(zgrep "* firmware as of" /usr/share/doc/raspberrypi-bootloader/changelog.Debian.gz | head -1 | awk '{ print $5 }')
KERNEL_HASH=$(wget https://raw.githubusercontent.com/raspberrypi/firmware/$FIRMWARE_HASH/extra/git_hash -O -)
git checkout $KERNEL_HASH

There are 4 files you are editing: "drivers/media/usb/uvc/Makefile", "drivers/media/usb/uvc/uvc_driver.c", "drivers/media/usb/uvc/uvcvideo.h", "include/uapi/linux/videodev2.h" . Edit those files appropriately according to the additions in the patch file, but without adding duplicates.

cp  /usr/src/linux-headers-`uname -r`/Module.symvers .
sudo modprobe configs
zcat /proc/config.gz > .config
make scripts oldconfig modules_prepare


sudo modprobe -r uvcvideo
sudo mv /lib/modules/`uname -r`/kernel/drivers/media/usb/uvc/uvcvideo.ko /lib/modules/`uname -r`/kernel/drivers/media/usb/uvc/uvcvideo.ko.orig
sudo cp ~/linux/drivers/media/usb/uvc/uvcvideo.ko /lib/modules/`uname -r`/kernel/drivers/media/usb/uvc/uvcvideo.ko
sudo reboot now

## check module_layout is idem in both orig and modified module.
sudo modprobe --dump-modversions /lib/modules/5.10.60-v7l+/kernel/drivers/media/usb/uvc/uvcvideo.ko

drivers/media/usb/uvc/Makefile
CONFIG_MODULE_SIG=n

drivers/media/usb/uvc/uvc_driver.c
	{
		.name		= "Raw data 8-bit (RAW8)",
		.guid		= UVC_GUID_FORMAT_RAW8,
		.fcc		= V4L2_PIX_FMT_RAW8,
	},
	{
		.name		= "Raw data 16-bit (RW16)",
		.guid		= UVC_GUID_FORMAT_RW16,
		.fcc		= V4L2_PIX_FMT_RW16,
	},
	{
		.name		= "Depth 16-bit (INVR)",
		.guid		= UVC_GUID_FORMAT_INVR,
		.fcc		= V4L2_PIX_FMT_INVR,
	},
	{
		.name		= "Depth:IR 16:8 24-bit (INRI)",
		.guid		= UVC_GUID_FORMAT_INRI,
		.fcc		= V4L2_PIX_FMT_INRI,
	},
	{
		.name		= "FlickerIR 8-bit (RELI)",
		.guid		= UVC_GUID_FORMAT_RELI,
		.fcc		= V4L2_PIX_FMT_RELI,
	},
	{
		.name		= "Luminosity data 8-bit (L8)",
		.guid		= UVC_GUID_FORMAT_L8,
		.fcc		= V4L2_PIX_FMT_Y8,
	},
	{
		.name		= "Luminosity data 16-bit (L16)",
		.guid		= UVC_GUID_FORMAT_L16,
		.fcc		= V4L2_PIX_FMT_Y16,
	},
	{
		.name		= "Depth data 16-bit (D16)",
		.guid		= UVC_GUID_FORMAT_D16,
		.fcc		= V4L2_PIX_FMT_Z16,
	},

drivers/media/usb/uvc/uvcvideo.h
#define UVC_GUID_FORMAT_RW10 \
	{ 'R',  'W',  '1',  '0', 0x00, 0x00, 0x10, 0x00, \
	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
#define UVC_GUID_FORMAT_RAW8 \
    { 'R',  'A',  'W',  '8', 0x66, 0x1a, 0x42, 0xa2, \
     0x90, 0x65, 0xd0, 0x18, 0x14, 0xa8, 0xef, 0x8a}
#define UVC_GUID_FORMAT_RW16 \
    { 'R',  'W',  '1',  '6', 0x00, 0x00, 0x10, 0x00, \
     0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
#define UVC_GUID_FORMAT_INVR \
	{ 'I',  'N',  'V',  'R', 0x90, 0x2d, 0x58, 0x4a, \
	 0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
#define UVC_GUID_FORMAT_INRI \
	{ 'I',  'N',  'R',  'I', 0x90, 0x2d, 0x58, 0x4a, \
	 0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
#define UVC_GUID_FORMAT_RELI \
	{ 'R',  'E',  'L',  'I', 0x14, 0x13, 0x43, 0xf9, \
	 0xa7, 0x5a, 0xee, 0x6b, 0xbf, 0x01, 0x2e, 0x23}
#define UVC_GUID_FORMAT_L8 \
	{ '2', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
#define UVC_GUID_FORMAT_L16 \
	{ 'Q', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
#define UVC_GUID_FORMAT_D16 \
	{ 'P', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}

include/uapi/linux/videodev2.h
   +#define V4L2_PIX_FMT_Z16      v4l2_fourcc('Z', '1', '6', ' ') /* Depth data 16-bit */
   +#define V4L2_PIX_FMT_Y8       v4l2_fourcc('Y', '8', ' ', ' ') /* Greyscale 8-bit */
   +#define V4L2_PIX_FMT_Y16      v4l2_fourcc('Y', '1', '6', ' ') /* Greyscale 16-bit */
   +#define V4L2_PIX_FMT_RAW8     v4l2_fourcc('R', 'A', 'W', '8') /* Raw data 8-bit */
   +#define V4L2_PIX_FMT_RW16     v4l2_fourcc('R', 'W', '1', '6') /* Raw data 16-bit */
   +#define V4L2_PIX_FMT_INVR     v4l2_fourcc('I', 'N', 'V', 'R') /* 16 Depth */
   +#define V4L2_PIX_FMT_INRI     v4l2_fourcc('I', 'N', 'R', 'I') /* 24 Depth/IR 16:8 */
   +#define V4L2_PIX_FMT_RELI     v4l2_fourcc('R', 'E', 'L', 'I') /* 8 IR alternating on off illumination */


