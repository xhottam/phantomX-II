apt-cache search libavcodec
sudo apt-get install libjpeg-dev jstest-gtk



https://varhowto.com/install-ros-noetic-raspberry-pi-4/

sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu buster main" > /etc/apt/sources.list.d/ros-noetic.list'
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
sudo apt update
sudo apt-get install -y python-rosdep python-rosinstall-generator python-wstool python-rosinstall build-essential cmake
sudo rosdep init
rosdep update
mkdir ~/ros_catkin_ws
cd ~/ros_catkin_ws
rosinstall_generator ros_comm --rosdistro noetic --deps --wet-only --tar > noetic-ros_comm-wet.rosinstall
wstool init src noetic-ros_comm-wet.rosinstall
rosdep install -y --from-paths src --ignore-src --rosdistro noetic -r --os=debian:buster

sudo src/catkin/bin/catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/noetic -j1 -DPYTHON_EXECUTABLE=/usr/bin/python3
echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc  
bash source
bash

@@@@@@CONF_SWAPSIZE=1024@@@@@@
sudoedit /etc/dphys-swapfile
sudo dphys-swapfile setup
sudo dphys-swapfile swapon
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


mkdir ~/catkin_ws/src
cd catkin_ws
catkin_make
rosinstall_generator nodelet_core bond_core common_msgs serial dynamic_reconfigure rplidar_ros diagnostics roslint  joystick_drivers urdf rosconsole_bridge xacro usb_cam image_common rosserial --rosdistro noetic --deps --wet-only --tar > noetic-phantom-dependencies.rosinstall
wstool init src noetic-phantom-dependencies.rosinstall
rosdep install -y --from-paths src --ignore-src --rosdistro noetic -r --os=debian:buster
catkin_make -DCMAKE_BUILD_TYPE=Release -j4

src/catkin/bin/catkin_make -DCMAKE_BUILD_TYPE=Release -j4 -DPYTHON_EXECUTABLE=/usr/bin/python3
src/catkin/bin/catkin_make  -DCMAKE_INSTALL_PREFIX=/opt/ros/noetic -DCATKIN_WHITELIST_PACKAGES=camera_calibration_parsers -DPYTHON_EXECUTABLE=/usr/bin/python3
 
 
git https://github.com/Interbotix/HROS1-Framework.git
cd /home/pi/HROS1-Framework/Linux/build
@@@@@@@@@@@@@@@@  const constexpr @@@@@@@@@@@@@@@@

vi ../../Framework/include/AXDXL.h
vi ../../Framework/include/Kinematics.h
vi ../../Framework/include/Camera.h

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
sudo make all
 

 
 
 /etc/udev/rules.d/73-joy-aliases.rules
 
 KERNEL=="ttyUSB*", ATTRS{idVendor}=="10c4", ATTRS{idProduct}=="ea60", MODE:="0666", SYMLINK+="rplidar"
 SUBSYSTEMS=="input", KERNEL=="js[0-9]*", ATTRS{name}=="Sony PLAYSTATION(R)3 Controller",  MODE:="0666", SYMLINK+="input/ps3"
 sudo service udev restart
 sudo chmod a+rw /dev/input/ps3
 


 Plug the USB bluetooth dongle into your computer. Then, plug the PS3 bluetooth joystick into the computer using a USB cable.
 Load the bluetooth dongle's MAC address into the PS3 joystick using:
 $ sudo bash
 $ rosrun ps3joy sixpair
 
 #OJO[python2.7]
 sudo python -m pip install pybluez==0.22
 
 $ sudo bash
 $ rosrun ps3joy ps3joy.py
 $ exit

 
 

######### http://wiki.ros.org/realsense_camera #########

rosinstall_generator cv_bridge pcl_ros > realsense.dependencies
rosinstall_generator pcl_conversions pcl_msgs tf tf2 tf2_eigen tf2_ros > pcl_ros.dependencies
rosinstall_generator angles > tf.dependencies
rosinstall_generator actionlib > tf2_ros.dependencies
rosinstall_generator tf2_msgs tf2_py > tf2.dependencies

wstool merge -t src <file.dependencies>
wstool update -t src
rosdep install -y --from-paths src --ignore-src --rosdistro melodic -r --os=debian:buster

catkin_make -j4 -DCMAKE_BUILD_TYPE=Release -DCATKIN_WHITELIST_PACKAGES="cv_bridge;tf2_eigen;tf2_py;tf2_msgs;tf2;actionlib;tf2_ros;angles;tf;pcl_msgs ;pcl_conversions;pcl_ros" --force-cmake
sudo apt-get install libusb-1.0-0-dev pkg-config
sudo apt-get install libglfw3-dev
http://wiki.ros.org/realsense_camera/Tutorials/Building_librealsense_from_Sources
git clone https://github.com/IntelRealSense/librealsense.git
cd ~/catkin_ws/src
git checkout tags/v1.12.4 -b librealsense
cd ~/catkin_ws/
catkin_make --pkg librealsense
catkin_make -j4 -DCMAKE_BUILD_TYPE=Release -DCATKIN_WHITELIST_PACKAGES=realsense_camera --force-cmake
##ALTERNATIVE
https://github.com/IntelRealSense/librealsense/blob/legacy/doc/installation.md
cd librealsense && mkdir build && cd build
cmake ../
cmake ../ -DBUILD_EXAMPLES=true -DBUILD_GRAPHICAL_EXAMPLES=false
make && sudo make install
sudo ldconfig
 
